# Generated by Django 3.2.8 on 2021-12-23 12:58

import autoslug.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anon_user', models.CharField(blank=True, db_index=True, max_length=64, null=True, verbose_name='anonymous ID')),
                ('count', models.PositiveIntegerField(blank=True, null=True, verbose_name='quantity of goods')),
                ('soft_delete', models.BooleanField(db_index=True, default=False, verbose_name='deleted')),
            ],
            options={
                'verbose_name': 'товар в корзине',
                'verbose_name_plural': 'товары в корзине',
            },
        ),
        migrations.CreateModel(
            name='CartSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='quantity')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='total_price')),
            ],
        ),
        migrations.CreateModel(
            name='Catalog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='price')),
                ('count', models.PositiveIntegerField(default=0, verbose_name='quantity')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='number of views')),
                ('soft_delete', models.BooleanField(default=False, verbose_name='soft delete')),
                ('popularity_index', models.PositiveIntegerField(default=0, verbose_name='popularity')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='date of creation of the catalog')),
            ],
            options={
                'verbose_name': 'The sellers product catalog',
                'verbose_name_plural': 'The sellers product catalog',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=300, verbose_name='product category name')),
                ('title_ru', models.CharField(db_index=True, max_length=300, null=True, verbose_name='product category name')),
                ('title_en', models.CharField(db_index=True, max_length=300, null=True, verbose_name='product category name')),
                ('code', models.IntegerField(db_index=True, unique=True, verbose_name='product category code')),
                ('soft_delete', models.BooleanField(default=False, verbose_name='category removed')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='title_en', unique=True, verbose_name='URL')),
                ('best', models.BooleanField(default=False, verbose_name='best')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='delivery name')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='shipping cost')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='delivery clearance time')),
                ('closed_at', models.DateTimeField(db_index=True, verbose_name='delivery completion time')),
            ],
            options={
                'verbose_name': 'Delivery',
                'verbose_name_plural': 'Delivery',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='name of the discount')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='time of discount creation')),
                ('closed_at', models.DateTimeField(db_index=True, verbose_name='discount completion time')),
                ('size', models.PositiveIntegerField(verbose_name='discount amount')),
                ('weight', models.PositiveIntegerField(verbose_name='discount weight')),
                ('active', models.BooleanField(default=False, verbose_name='discount activated')),
                ('soft_delete', models.BooleanField(default=False, verbose_name='discount removed')),
            ],
            options={
                'verbose_name': 'Discount',
                'verbose_name_plural': 'Discounts',
            },
        ),
        migrations.CreateModel(
            name='DiscountVariants',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='discount option')),
            ],
            options={
                'verbose_name': 'discount option',
                'verbose_name_plural': 'Discount options',
            },
        ),
        migrations.CreateModel(
            name='Good',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=500, verbose_name='good name')),
                ('title_ru', models.CharField(db_index=True, max_length=500, null=True, verbose_name='good name')),
                ('title_en', models.CharField(db_index=True, max_length=500, null=True, verbose_name='good name')),
                ('maker', models.CharField(blank=True, db_index=True, max_length=500, null=True, verbose_name='good maker')),
                ('maker_ru', models.CharField(blank=True, db_index=True, max_length=500, null=True, verbose_name='good maker')),
                ('maker_en', models.CharField(blank=True, db_index=True, max_length=500, null=True, verbose_name='good maker')),
                ('model', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='good model')),
                ('model_ru', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='good model')),
                ('model_en', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='good model')),
                ('good_type', models.CharField(blank=True, db_index=True, max_length=500, null=True, verbose_name='type of goods')),
                ('good_type_ru', models.CharField(blank=True, db_index=True, max_length=500, null=True, verbose_name='type of goods')),
                ('good_type_en', models.CharField(blank=True, db_index=True, max_length=500, null=True, verbose_name='type of goods')),
                ('description', models.TextField(verbose_name='product description')),
                ('description_ru', models.TextField(null=True, verbose_name='product description')),
                ('description_en', models.TextField(null=True, verbose_name='product description')),
                ('short_list', models.BooleanField(db_index=True, default=False, verbose_name='special offer')),
                ('soft_delete', models.BooleanField(default=False, verbose_name='the product has been removed')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='the number of product views')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='product creation date')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='GoodGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='product group for discount')),
                ('code', models.IntegerField(db_index=True, unique=True, verbose_name='product group code for the discount')),
            ],
            options={
                'verbose_name': 'group of products for discount',
                'verbose_name_plural': 'groups of products for discounts',
            },
        ),
        migrations.CreateModel(
            name='GoodView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
            ],
        ),
        migrations.CreateModel(
            name='MediaFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hash', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='hash for the file')),
                ('title', models.CharField(max_length=500, verbose_name='file description')),
                ('filename', models.CharField(max_length=255, verbose_name='file name')),
                ('file', models.FileField(null=True, upload_to='catalog/%Y/%m/%d/', verbose_name='File')),
                ('link', models.TextField(null=True, verbose_name='www link')),
            ],
            options={
                'verbose_name': 'File',
                'verbose_name_plural': 'Files',
            },
        ),
        migrations.CreateModel(
            name='MessagesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('mail', models.EmailField(max_length=254, verbose_name='Email')),
                ('website', models.URLField(verbose_name='Website')),
                ('message', models.TextField(max_length=512, verbose_name='Message')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Message creation time')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery', models.CharField(choices=[('ordinary', 'Ordinary'), ('express delivery', 'Express delivery')], max_length=20, verbose_name='delivery')),
                ('city', models.CharField(db_index=True, max_length=50, verbose_name='city')),
                ('address', models.TextField(blank=True, null=True, verbose_name='delivery address')),
                ('description', models.TextField(blank=True, null=True, verbose_name='order description')),
                ('pay_method', models.CharField(choices=[('online', 'online'), ('someone', 'someone')], max_length=20, verbose_name='pay method')),
                ('closed', models.BooleanField(default=False, verbose_name='заказ выполнен')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='order creation time')),
                ('closed_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='order completion time')),
                ('delivery_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='shipping cost')),
                ('soft_delete', models.BooleanField(blank=True, default=False, null=True, verbose_name='order deleted')),
                ('status', models.CharField(db_index=True, max_length=20, verbose_name='payment status')),
                ('response', models.TextField(verbose_name='payment response')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='product price')),
                ('count', models.PositiveIntegerField(blank=True, null=True, verbose_name='quantity of goods')),
                ('soft_delete', models.BooleanField(default=False, verbose_name='the product has been removed')),
            ],
            options={
                'verbose_name': 'Order Details',
                'verbose_name_plural': 'Order Details',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=20, verbose_name='payment status')),
                ('card', models.CharField(max_length=8, verbose_name='payment card')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='payment time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
            },
        ),
        migrations.CreateModel(
            name='RelatedGoodGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='seller name')),
                ('title_ru', models.CharField(db_index=True, max_length=100, null=True, unique=True, verbose_name='seller name')),
                ('title_en', models.CharField(db_index=True, max_length=100, null=True, unique=True, verbose_name='seller name')),
                ('about_info', models.TextField(blank=True, null=True, verbose_name='story')),
                ('about_info_ru', models.TextField(blank=True, null=True, verbose_name='story')),
                ('about_info_en', models.TextField(blank=True, null=True, verbose_name='story')),
                ('delivery_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='delivery')),
                ('delivery_info_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='delivery')),
                ('delivery_info_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='delivery')),
                ('money_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='money')),
                ('money_info_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='money')),
                ('money_info_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='money')),
                ('support_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='support')),
                ('support_info_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='support')),
                ('support_info_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='support')),
                ('quality_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='quality')),
                ('quality_info_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='quality')),
                ('quality_info_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='quality')),
                ('phone_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='phone')),
                ('phone_info_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='phone')),
                ('phone_info_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='phone')),
                ('address_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='address')),
                ('address_info_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='address')),
                ('address_info_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='address')),
                ('mail_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='mail')),
                ('mail_info_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='mail')),
                ('mail_info_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='mail')),
                ('fb_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='FaceBook')),
                ('fb_info_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='FaceBook')),
                ('fb_info_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='FaceBook')),
                ('tw_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='Twitter')),
                ('tw_info_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='Twitter')),
                ('tw_info_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='Twitter')),
                ('gg_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='Google+')),
                ('gg_info_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='Google+')),
                ('gg_info_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='Google+')),
                ('in_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='In')),
                ('in_info_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='In')),
                ('in_info_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='In')),
                ('pt_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='Pt')),
                ('pt_info_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='Pt')),
                ('pt_info_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='Pt')),
                ('ml_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='mail')),
                ('ml_info_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='mail')),
                ('ml_info_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='mail')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='catalog/%Y/%m/%d/', verbose_name='icon')),
            ],
            options={
                'verbose_name': 'seller',
                'verbose_name_plural': 'sellers',
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('title_ru', models.CharField(max_length=100, null=True, verbose_name='Title')),
                ('title_en', models.CharField(max_length=100, null=True, verbose_name='Title')),
                ('content', models.TextField(blank=True, max_length=255, null=True, verbose_name='Content')),
                ('content_ru', models.TextField(blank=True, max_length=255, null=True, verbose_name='Content')),
                ('content_en', models.TextField(blank=True, max_length=255, null=True, verbose_name='Content')),
                ('link', models.URLField(blank=True, max_length=1000, null=True, verbose_name='Link')),
                ('image', models.ImageField(blank=True, null=True, upload_to='stock', verbose_name='Image')),
                ('image_link', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Image_link')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activity')),
                ('sort', models.IntegerField(default=100, verbose_name='Sort')),
            ],
            options={
                'verbose_name': 'Stock',
                'verbose_name_plural': 'Stocks',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=50, verbose_name='tag')),
                ('title_ru', models.CharField(db_index=True, max_length=50, null=True, verbose_name='tag')),
                ('title_en', models.CharField(db_index=True, max_length=50, null=True, verbose_name='tag')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Review text')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='time of writing the review')),
                ('soft_delete', models.BooleanField(default=False, verbose_name='review deleted')),
                ('good', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='review', to='app_market.good', verbose_name='product connection')),
            ],
            options={
                'verbose_name': 'Product Review',
                'verbose_name_plural': 'Product Reviews',
            },
        ),
    ]
